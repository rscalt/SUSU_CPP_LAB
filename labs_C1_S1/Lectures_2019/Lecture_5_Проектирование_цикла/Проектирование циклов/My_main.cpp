#include <locale>
#include <conio.h>
#include "Header.h"
using namespace std;
void main(void)
{
	setlocale(LC_ALL, ".1251");
	// Пример - цикл с контролем вводимых данных.
	int mark;
	//do
	//{
	//	cout << "введите х=[1,5]\n";
	//	cin >> mark;
	//} while (mark <1 || mark >5);
	//
	do
	{
		cout << "Мир прекрасен";
		cout << "Press esc for exit..";
	} while (_getch() != 27);
    // cin.get(); 
	

	// Пример 1.Таблица значений функции.
	Table();
	
	// Пример 2. Накопление суммы чисел натурального ряда.
	// S = 1 + 2 + 3 + 4 +...+ n	n - кол-во значений.
	// S=1, S=S+2, S=S+3, S=S+a
	// a, это управляющая переменная.
	// Инструмент (цикл) - любой.
	
	int n, S = 0;  // n-число слагаемых,  a - и номер, и значение слагаемого
	int a;
	cout << "\nInput N\n";
	cin >> n;
	// for.
	for (a = 0, S=0; a <= n; a++)
		S += a;
	cout << "Summa = " << S << endl;
	// while.
	a = 0;	// Подготовка
	S = 0;
	while (a <= n)	// Проверка.
	{
		S += a;
		a++;
	}
	cout << "Summa = " << S << endl;
	// Do..While
	S = 0; a = 1;
	do
		S += a++;
	while (a <= n);
	cout << "Summa = " << S << endl;
	
	// Пример 3. Необходимость break
	// Найти сумму арифметической прогрессии,
	// не превышающей указанного значения N.
	cout << "\nInput N\n";
	cin >> n;
	S = 0;
	a = 0;
	for (a = 1; ; a++)
	{                                         // Бесконечный цикл
		S += a;
		if (S>n)      break;                 // Условие завершения
	}
	cout << "Count of elements " << a << endl;
	
	// Пример 4. Необходимость continue
	// Найти сумму слагаемых вида 1/x;
	double x, S1;
	for (S1 = 0, x = -0.5; x <= 1.1; x += 0.1)       // При x=0 - деление на 0.
	{
		if (fabs(x) < 0.0001) continue;    //если в знаменателе 0
		S1 += 1. / x;
	}
	cout << "Summa= " << S1 << endl;
	
	// Пример 5. Итерационный цикл. Найти сумму
	// слагаемых вида   1/n с точностью 0.001, 
	// принимая за значение погрешности величину 
	// последнего включаемого в сумму слагаемого.

	double Sum = 0;
	double n = 1;		// Значение знаменателя. Фактически, номер.
	do
	{
		Sum += 1. / n;
		n += 1;
	} while (fabs (1./n) <0.001);	// Так определяется точность.
	cout << Sum << "\n";

}