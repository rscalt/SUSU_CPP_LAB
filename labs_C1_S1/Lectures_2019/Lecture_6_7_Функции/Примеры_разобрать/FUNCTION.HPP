
// Тема 1. Простая функция, возвращающая значение.
// Имеет тип, имеет имя, имеет список параметров.
// Пример описания функции, которая находит среднее арифметическое трех чисел.

float Avg (float a, float b, float c)
{	float S;	// Локальная переменная.
	S=(a+b+c)/3.;
	return S;	// Тип совпадает с типом функции.
}

// Тема 2. Функция типа void.
// Пример описания функции,
// которая выводит на экран 50 символов "звездочка" (*).

#include <stdio.h>

void print(void)                // Функции типа void без параметров.
{
int i;                          // Локальная переменная.
for (i=1;i<=50;i++)
   printf("%c",'*');

printf("\n");
}

//Тема 3. Функция, возвращающая параметры.
//Пример - переменить значения переменных.

//Пишем функцию Swap1 с параметрами по значению.
void Swap1 (int x, int y)
{ 	int tmp;
	tmp = x;
	x = y;
	y = tmp;		// Переменные переменились своими значениями.
}

//Пишем функцию Swap2 с параметрами по ссылке.
void Swap2 (int &x, int &y)
{ 	int tmp;
	tmp = x;
	x = y;
	y = tmp;		// Переменные переменились своими значениями.
}

int Sum1 (int n)
{
int	S = 0;			// Переменная для накопления значения суммы.
int	i; 			// Управляющая переменная для цикла суммирования.
	for (i = 1; i<= n; i++)
		S += i;
return	S;
}
// В этом примере локальная переменная i не необходима. Зная, что параметр, 
// передаваемый по значению, не будет изменен функцией, его можно использовать 
// как рабочую переменную для управления циклом. 

int Sum2 (int n)
{
	for (int S = 0; n > 0; n--)	// При n=0 цикл будет завершен.
		S += n;
return	S;
}  // Функция не изменит значения n.


