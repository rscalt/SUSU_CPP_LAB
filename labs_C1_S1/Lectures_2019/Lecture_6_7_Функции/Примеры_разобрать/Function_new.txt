
   Функции и все, что с этим связано

Библиотечные функции.
Модульный стиль программирования.

Функция - самостоятельный именованный алгоритм решения некторой законченной задачи.
Который:
может использоваться многократно.
может быть подключен к любому проекту.
безошибочно решает задачу при любых наборах данных.
может входить в библиотеку.

Задача

   Найти площадь треугольника, заданного длинами сторон.

Итоги

Все функции в С++ описываются на одном уровне, равноправны.

Особенная функция - main, с нее начинается выполнение кода.

main способна вызвать другие функции,
а другие функции способны вызывать другие функции.

// -------------------------------------------------------------------

Функция должна быть описана перед употреблением
Описание функции

Тип функции
Имя Функции
Список формальных параметров
Тело функции - описание алгоритма.

Тип функции 
  1) Базовый тип, если функция возвращает значение базового типа (в теле функции return возвращает управление в вызывающую функцию и значение, которое найдено).
  2) void, если функция не возвращает значения - обрабатывают данные "на месте" или интерфейсные функции.
  (в теле функции return может отсутствовать или быть записан как return ;  	// Управление передано, а значене не возвращается
  )
  3) Указатель (адрес объекта), если функция возвращает значение сложного типа (массив, объект, запись и прочие).
  4) не указан, то тип будет int
 

Имя функции
   Должно быть уникально 
   My_Long
   Не рекомендуется переопределять имена библиотечных функций.
   Перегрузка функций - одно имя сопоставлено разным алгоритмам.  
   sin(float x)
   {
      // 
   }
 Не начинать имена со знака _  Так начинаются макросы.
   _max(int a, int b) 
 

 Параметры функции
 Параметры функции в описании - формальные (не имеют реальных значений, только описывают типы, количество и порядок следования данных, передаваемых в функцию - СИГНАТУРА ПАРАМЕТРОВ)
   От описания - к правильному обращению.
 Параметры функции в обращении - фактические (те реальные значения, с которыми функция отбабатывает очередной вызов).
   Фактические параметры - константы, переменные, выражения, указатели.

Замечание. 
   Формальные параметры одного типа, а фактические другого типа??

   Преобразование типов - на время выполнения действия меньший тип приводит к большему.
   Warning (double    float )


   Тело функции
{
// Локальные данные функции - могут присутствовать.
Тело функции = БЛОК.
   Переменная, объявленная в блоке, известна толко в этом блоке, 
порождается при входе в блок, и умирает при выходе.
   Фактически занимает место в ОП.
Алгоритма
return Выражение;  // Совпадает с типом функции.
return ;           // Если тип void.
}


Обращение к функции

   Имя (Фактические параметры)


   Оператор-выражение
Если функция возвращает одно значение, то это значение можно:
а) присвоить    S=Square(2,3,4);
б) использовать в выражении S=2*Square(2,3,4); 	2*pow(sin(x),3);
в) напечатать  printf("",Square(2,3,4));


   Оператор-функция
Если функция не возвращает значения, то 
   
   a=b=c=22;
   
   printf("%d %d %d\n",a,b,c);
 
Перегузка функций.
Пример - печатает 40 символов '*'

