#include <stdio.h>
#include <locale>
#include <iostream>
#include <conio.h>
#include "Primers_4.h"
using namespace std;
void main(void) {
// Примеры записи условного оператора
// Пример 1 – без альтернативы.
/*   Стоимость равна произведению цены на количество.
Если есть скидка, то стоимость уменьшается. */
	setlocale(LC_ALL, ".1251");
float pay, cost = 100;	   //
int count = 1;
int discount=15;			// Процент скидки.
//-------------------------------------------------------
pay = cost * count;		// Общая формула.
if (discount != 0)		// Если есть скидка, то стоимость уменьшается.
   pay = pay - pay*discount/100.;
printf ("Стоимость = %6.2f\n", pay);

// Пример 2 – две ветки.
/* Оплата труда работника, это произведение количества 
отработанных часов на стоимость часа.
Если отработано более 40 часов, то за каждый час 
работодатель платит в полтора раза больше. */
int hour=41;
float rate=40;     // Стоимость часа.

if (hour<40)
    pay = rate * hour;			// Обычная оплата.
else
    pay = rate * 40 + (hour-40) * (rate*1.5);	// Повышенная оплата.
printf ("К оплате %6.2f рублей.\n", pay);

// Пример 3 - использование блоков в составе 
// условного оператора.
// Пусть необходима расшифровка вывода.
if (hour < 40)
   {
	pay = rate*hour;	// Обычная оплата.
	printf ("Оплачено %d часов, к оплате %6.2f руб.\n", hour, pay);
   }
   else
   {
	pay = rate*40+(hour - 40)*rate*1.5;	// Повышенная оплата.
	printf ("Оплачено %d часов, из них %d сверхурочно.\n",hour, hour - 40);
	printf ("К оплате %6.2f руб.\n", pay);
   }

// Дополнительные примеры
// 1. Минимаксы.
int a=2, b=4, c=1;  // a < b   ...   min < c 
int min;
if (a < b)
	min = a;
else
    min = b;
if (c < min)
	min = c;
// Второй способ.
if (a < b && a < c)
	min = a;
else
if (b < a && b < c)
	min = b;
else
    min = c;





	

cout << min;
// int  Mod =  (i<=0) ?  -i  :  i;
// 2. Работа с символами: 
bool B;
char c1, c2;
c1 = 'А';
c2 = 'а';
B = c1 < c2;
for (int ci = 0; ci < 255; ci++)
{
	cout << (char)ci << " ";
	if (ci%16 == 0)
		cout << "\n";
}

// Primer_If_1();
// Primer_If_2();
//
}
//---------------------------------------------------------------------------
