/*
Упражнение 2. Итерационный цикл
Запишите код программы для решения задачи.
Последовательность вычисляется по закону:
1 + 1/2
, 1 + 1/2 + 1/3
, 1 + 1/2 + 1/3 +1/4
, ⋯
Известно, что существует предел последовательности. 
Найти его с точностью ε знаков после запятой
*/


#include <iostream>
#include <iomanip>
using namespace std;

int main()
{
    cout // форматируем значения...
    << setiosflags(ios::fixed) // неслетающий флаг...
    << setiosflags(ios::showpoint) // всегда с точкой...
    << setprecision(5); //знаков после запятой...

    float a = (1 + 0.5); //первый член последовательности
    const float e = 0.0001F; //точность предела
    unsigned int  n = 1; // порядковый номер первого члена последовательности

    float delta; //разность старшего (a2) и младшего (a1) членов
    float a1 = 0;
    float a2 = 0;

    do
    {
        a1 = a; //младший член
        a += 1/((static_cast<float>(n))+2); //старший член
        a2 = a; //сохраняем полученное значение старшего члена
        delta = (a2 - a1); //рассчитываем разницу

            if (n%1000 == 0) //выводим только каждый 100-й элемент
            {
            cout << "a" << n; // выводим младший на шаге
            cout << " = " << a1 << "\t";

            cout << "a" << n+1; // выводим старший на шаге
            cout << " = " << a2 << "\t";

            cout << "delta"; // выводим дельту на шаге
            cout << " = " << delta << "\n";
            }
        n++;
    } while (delta > e); // условие продолжения цикла = !(условие завершения) :)

    cout << "\nlocal Limit = " << a2; // локальный предел
    cout << " at n = " << n;
    cout << " and e = " << e << "\n"; // точность
}
