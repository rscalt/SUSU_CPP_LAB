#pragma once
#include <iostream>

//Тема 1. Функция, возвращающая параметры по адресу.
//Упражнение 1. Параметры по ссылке
//Пишем функцию Swap1 с параметрами по значению.
void Swap1(int x, int y)
{
	int tmp;
	tmp = x;
	x = y;
	y = tmp;	// Переменные переменились своими значениями.
}
//Пишем функцию Swap2 с параметрами по ссылке.
void Swap2(int &x, int &y)
{
	int tmp;
	tmp = x;
	x = y;
	y = tmp;	// Переменные переменились своими значениями.
}

// Упражнение 2. Задание для самостоятельной разработки. 
// Опишите функцию Range с тремя параметрами, которая меняет значения 
// параметров так, чтобы они были упорядочены по возрастанию. 
// Обратитесь к ней.
void Range(int &a, int &b, int &c)
{}

// Тема 2. Перегруженные функции.
// Упражнение 4. Перегрузка функций. 

void print(void)       
{
	int i;   // Локальная переменная.
	for (i = 1; i <= 50; i++)
	   std::cout << '*';
	std::cout << std::endl;
}
// Перегрузите функцию print(int n) с параметром, которая выводит 
// на экран указанное число символов '*'. 
// Обратитесь к ней 2-3 раза с разными значениями фактических параметров. 
// Перегрузите функцию print(int n, char c) с двумя параметрами, 
// которая выводит на экран указанное число указанных символов. 
// Обратитесь к ней 2-3 раза с разными значениями фактических параметров. 

// Тема 3. Область действия и время жизни имен.
// Упражнение 4. Исследование принципа работы статического объекта 
// Опишите две функции. 
void Auto_f(void)
{}
void Stat_f(void)
{}
// Обратитесь к ним.
//

// Бонус. 
// Опишите функцию, находящую сумму двух простых дробей, заданных значениями 
// числителей и знаменателей.



